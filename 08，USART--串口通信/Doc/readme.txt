/*********************************************************************************************/
【*】程序简介

-工程名称：USART1接发
-实验平台: 野火STM32-F103 指南者 开发板 
-ST固件库版本：3.5.0



/*********************************************************************************************/
 【*】实验操作：

      1.到光盘资料处下载并安装【多功能调试助手】到电脑上
      2.把编译好的程序下载到开发板上
      3.打开【多功能调试助手】，并配置好相关的参数
	【端口】的选择可以打开  此电脑>属性>设备管理器>端口  可以查看，不过一般默认为一个
           	【波特率】-----115200
	【校验位】-----无
	【数据位】-----8
	【停止位】-----1
      4.打开串口
      5.按下板子的RESET按键，接收区会出现如下：
        
         这是一个串口中断接收回显实验
         欢迎使用野火STM32开发板
         
  /*证明程序已经成功下载到板子上*/
       6.在发送区输入字符，点击发送数据，接收区会出现相同的字符



【*】 引脚分配

    开发板上的J17处，通过跳帽连接
              J17		J17
	RXD       <------>     PA9
	TXD       <------>       PA10

此操作说明使用USART2实现控制器与电脑之间的传输


【&】程序描述：***bsp为Board Support Packet  (板级支持包）的缩写，每次文件命名都以这个开头是为了后面方便移植***
      <bsp_usart.h>: 
	
	1.宏定义所选用的串口、串口的外设时钟、串口时钟使能以及串口的波特率
	 2.宏定义串口有关的GPIO时钟及其时钟使能
	 3.宏定义串口的收发引脚接口
	 4.宏定义串口的中断寄存器请求	
					
       <bsp_usart.c>:
	
	1.配置NVIC(嵌套向量中断控制器）	          
	2.配置USART(其中包括两大部分：GPIO口的初始化和USART的初始化。    
       		 	GPIO口的初始化和前面的一样，这里不赘述。
			USART的初始化：配置波特率、数据字长、停止位、校验位、硬件流控制、工作模式这六个工作参数，最后要加上完成配置的程序。此外还要配置串口中断优先级，使能串口接收中断，使能串口
	3.编程发送一个字节、8位数组、字符串、一个16位数的函数体
	4.重定向c库函数printf和scanf到串口
	
        <main.c>:

	1.调用USART的配置
	2.编写输入函数




【*】注意：后面还有4个串口的接发实验，基本的架构都一样，主要注意不同串口的选择的修改，软件上引脚上的修改以及开发板上接通对应串口的引脚连接。实验就可以顺利进行




/*********************************************************************************************/